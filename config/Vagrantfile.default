Vagrant.require_version ">= 1.7.0"


project = "eintopf"
if ENV['EINTOPF_HOME']
  projectDir = "#{ENV['EINTOPF_HOME']}/eintopf"
else
  projectDir = Dir.home + "/eintopf"
end

Vagrant.configure("2") do |config|
  config.vm.box_check_update = false
  config.vm.define project
  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = project

  host = RbConfig::CONFIG['host_os']
  config.vm.provider :virtualbox do |vb|
    if host =~ /darwin/
      vmCpus = `sysctl -n hw.ncpu`.to_i
      # sysctl returns Bytes and we need to convert to MB
      mem = `sysctl -n hw.memsize`.to_i / 1024 / 1024 / 4

    elsif host =~ /linux/
      vmCpus = `nproc`.to_i
      # meminfo shows KB and we need to convert to MB
      mem = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024 / 4

    else # sorry Windows folks, I can't help you
      vmCpus = 4
      mem = 2048
    end

    vb.name = project
    vb.memory = mem
    vb.cpus = vmCpus
  end

  if host =~ /darwin/ or host =~ /linux/
    config.vm.network "private_network", type: "dhcp"
    config.vm.synced_folder ".", "/vagrant", type: "nfs"
    config.vm.synced_folder projectDir, "/projects", type: "nfs", create: true
  else
    config.vm.synced_folder projectDir, "/projects", create: true
  end

  # docker provisioning fails without first update
  config.vm.provision :shell, inline: "if [ -z \"`which docker`\" ]; then apt-get update; fi"

  config.vm.provision "docker"

  # Provisioning script goes in here.
    config.vm.provision :shell, inline: <<-SHELL
      # set custom docker options @todo better grep
      if [ -z "`cat /etc/default/docker | grep '^DOCKER_OPTS="-r=true -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock"'`" ]; then
          echo "update docker config";
          echo 'DOCKER_OPTS="-r=true -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock"' >> /etc/default/docker;
          initctl restart docker;
      fi
      # install docker-compose
      COMPOSE_VERSION="1.4.2"
      if [ -z "`which docker-compose`" ]; then
          echo "install docker-compose";
          curl -L https://github.com/docker/compose/releases/download/$COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose;
      fi
      docker-compose --version | grep $COMPOSE_VERSION >> /dev/null \
      || curl -L https://github.com/docker/compose/releases/download/$COMPOSE_VERSION/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose \
      && chmod +x /usr/local/bin/docker-compose
    SHELL

  config.vm.network "forwarded_port", guest: 2375,  host: 2375    # Docker
  config.vm.network "forwarded_port", guest: 4480,  host: 4480    # Proxy public
  config.vm.network "forwarded_port", guest: 4443,  host: 4443    # Proxy SSL

end
